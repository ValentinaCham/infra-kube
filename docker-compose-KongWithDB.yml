version: '3.9'

services:
  kong-db:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kong-net-2

  kong-migrations:
    image: kong/kong-gateway:3.10.0.2
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
    command: kong migrations bootstrap
    networks:
      - kong-net-2

  kong:
    image: kong/kong-gateway:3.10.0.2
    depends_on:
      kong-db:
        condition: service_healthy
      kong-migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_LICENSE_DATA: ""
    restart: always
    networks:
      - kong-net-2

  login-service:
    build:
      context: ../ms-login
    ports:
      - "3001:3000"
    expose:
      - "3000"
    networks:
      - kong-net-2

  student-service:
    build:
      context: ../ms-student
    ports:
      - "3002:3000"
    expose:
      - "3000"
    networks:
      - kong-net-2

volumes:
  kong-db:

networks:
  kong-net-2:
    driver: bridge
